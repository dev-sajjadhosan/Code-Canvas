[
  {
    "id": 1,
    "name": "WeatherNow",
    "category": "Weather App",
    "projectType": "intermediate",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 120,
    "view": 3400,
    "comment": 15,
    "liveLink": "https://example.com/weathernow",
    "githubRepoLink": "https://github.com/username/weathernow",
    "description": "A sleek weather forecast app using OpenWeather API.",
    "whyIMakeThis": "To learn API integration and improve UI skills.",
    "image": "https://example.com/images/weathernow.png",
    "features": ["Search by city", "7-day forecast", "Responsive UI"],
    "comingFeatures": ["Geolocation auto-detect", "Theme switcher"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>WeatherNow</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"weather-container\">\n    <input type=\"text\" id=\"cityInput\" placeholder=\"Enter city\" />\n    <button onclick=\"getWeather()\">Get Weather</button>\n    <div id=\"weatherResult\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: Arial, sans-serif;\n  background: linear-gradient(to bottom, #87cefa, #ffffff);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.weather-container {\n  background: #fff;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n}\ninput, button {\n  margin: 10px 0;\n  padding: 8px;\n}",
      "TypeScript": "async function getWeather() {\n  const city = document.getElementById(\"cityInput\").value;\n  const apiKey = \"your_api_key\";\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  document.getElementById(\"weatherResult\").innerHTML = `\n    <h3>${data.name}</h3>\n    <p>Temperature: ${data.main.temp}\u00b0C</p>\n    <p>Condition: ${data.weather[0].description}</p>\n  `;\n}"
    }
  },
  {
    "id": 2,
    "name": "TaskMaster",
    "category": "To-Do App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 80,
    "view": 2100,
    "comment": 8,
    "liveLink": "https://example.com/taskmaster",
    "githubRepoLink": "https://github.com/username/taskmaster",
    "description": "A simple to-do list application to manage daily tasks.",
    "whyIMakeThis": "To practice DOM manipulation and local storage.",
    "image": "https://example.com/images/taskmaster.png",
    "features": ["Add tasks", "Mark complete", "Delete tasks"],
    "comingFeatures": ["Task filtering", "Due dates"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>TaskMaster</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"app\">\n    <h1>To-Do List</h1>\n    <input id=\"taskInput\" type=\"text\" placeholder=\"New Task\">\n    <button onclick=\"addTask()\">Add</button>\n    <ul id=\"taskList\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #f0f0f0;\n  padding: 20px;\n}\n.app {\n  max-width: 400px;\n  margin: auto;\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n}\ninput, button {\n  padding: 10px;\n  margin: 5px 0;\n  width: 100%;\n}",
      "JavaScript": "function addTask() {\n  const input = document.getElementById('taskInput');\n  const task = input.value;\n  if (task === '') return;\n  const li = document.createElement('li');\n  li.textContent = task;\n  li.onclick = () => li.remove();\n  document.getElementById('taskList').appendChild(li);\n  input.value = '';\n}"
    }
  },
  {
    "id": 3,
    "name": "QuoteGenius",
    "category": "Quotes App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 70,
    "view": 1950,
    "comment": 5,
    "liveLink": "https://example.com/quotegenius",
    "githubRepoLink": "https://github.com/username/quotegenius",
    "description": "Displays random quotes from famous people.",
    "whyIMakeThis": "To learn async data fetching and UI rendering.",
    "image": "https://example.com/images/quotegenius.png",
    "features": ["Fetch random quote", "Tweet quote"],
    "comingFeatures": ["Save favorite quotes", "Search by author"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>QuoteGenius</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"quote-box\">\n    <p id=\"quote\">Click to get a quote!</p>\n    <button onclick=\"fetchQuote()\">New Quote</button>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #dcdcdc;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n.quote-box {\n  text-align: center;\n  background: white;\n  padding: 30px;\n  border-radius: 10px;\n}\nbutton {\n  margin-top: 10px;\n}",
      "JavaScript": "async function fetchQuote() {\n  const response = await fetch('https://api.quotable.io/random');\n  const data = await response.json();\n  document.getElementById('quote').innerText = data.content;\n}"
    }
  },
  {
    "id": 1,
    "name": "WeatherNow",
    "category": "Weather App",
    "projectType": "intermediate",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 120,
    "view": 3400,
    "comment": 15,
    "liveLink": "https://example.com/weathernow",
    "githubRepoLink": "https://github.com/username/weathernow",
    "description": "A sleek weather forecast app using OpenWeather API.",
    "whyIMakeThis": "To learn API integration and improve UI skills.",
    "image": "https://example.com/images/weathernow.png",
    "features": ["Search by city", "7-day forecast", "Responsive UI"],
    "comingFeatures": ["Geolocation auto-detect", "Theme switcher"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>WeatherNow</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"weather-container\">\n    <input type=\"text\" id=\"cityInput\" placeholder=\"Enter city\" />\n    <button onclick=\"getWeather()\">Get Weather</button>\n    <div id=\"weatherResult\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: Arial, sans-serif;\n  background: linear-gradient(to bottom, #87cefa, #ffffff);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.weather-container {\n  background: #fff;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n}\ninput, button {\n  margin: 10px 0;\n  padding: 8px;\n}",
      "JavaScript": "async function getWeather() {\n  const city = document.getElementById(\"cityInput\").value;\n  const apiKey = \"your_api_key\";\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  document.getElementById(\"weatherResult\").innerHTML = `\n    <h3>${data.name}</h3>\n    <p>Temperature: ${data.main.temp}\u00b0C</p>\n    <p>Condition: ${data.weather[0].description}</p>\n  `;\n}"
    }
  },
  {
    "id": 2,
    "name": "TaskMaster",
    "category": "To-Do App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 80,
    "view": 2100,
    "comment": 8,
    "liveLink": "https://example.com/taskmaster",
    "githubRepoLink": "https://github.com/username/taskmaster",
    "description": "A simple to-do list application to manage daily tasks.",
    "whyIMakeThis": "To practice DOM manipulation and local storage.",
    "image": "https://example.com/images/taskmaster.png",
    "features": ["Add tasks", "Mark complete", "Delete tasks"],
    "comingFeatures": ["Task filtering", "Due dates"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>TaskMaster</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"app\">\n    <h1>To-Do List</h1>\n    <input id=\"taskInput\" type=\"text\" placeholder=\"New Task\">\n    <button onclick=\"addTask()\">Add</button>\n    <ul id=\"taskList\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #f0f0f0;\n  padding: 20px;\n}\n.app {\n  max-width: 400px;\n  margin: auto;\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n}\ninput, button {\n  padding: 10px;\n  margin: 5px 0;\n  width: 100%;\n}",
      "JavaScript": "function addTask() {\n  const input = document.getElementById('taskInput');\n  const task = input.value;\n  if (task === '') return;\n  const li = document.createElement('li');\n  li.textContent = task;\n  li.onclick = () => li.remove();\n  document.getElementById('taskList').appendChild(li);\n  input.value = '';\n}"
    }
  },
  {
    "id": 3,
    "name": "QuoteGenius",
    "category": "Quotes App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 70,
    "view": 1950,
    "comment": 5,
    "liveLink": "https://example.com/quotegenius",
    "githubRepoLink": "https://github.com/username/quotegenius",
    "description": "Displays random quotes from famous people.",
    "whyIMakeThis": "To learn async data fetching and UI rendering.",
    "image": "https://example.com/images/quotegenius.png",
    "features": ["Fetch random quote", "Tweet quote"],
    "comingFeatures": ["Save favorite quotes", "Search by author"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>QuoteGenius</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"quote-box\">\n    <p id=\"quote\">Click to get a quote!</p>\n    <button onclick=\"fetchQuote()\">New Quote</button>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #dcdcdc;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n.quote-box {\n  text-align: center;\n  background: white;\n  padding: 30px;\n  border-radius: 10px;\n}\nbutton {\n  margin-top: 10px;\n}",
      "JavaScript": "async function fetchQuote() {\n  const response = await fetch('https://api.quotable.io/random');\n  const data = await response.json();\n  document.getElementById('quote').innerText = data.content;\n}"
    }
  },
  {
    "id": 1,
    "name": "WeatherNow",
    "category": "Weather App",
    "projectType": "intermediate",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 120,
    "view": 3400,
    "comment": 15,
    "liveLink": "https://example.com/weathernow",
    "githubRepoLink": "https://github.com/username/weathernow",
    "description": "A sleek weather forecast app using OpenWeather API.",
    "whyIMakeThis": "To learn API integration and improve UI skills.",
    "image": "https://example.com/images/weathernow.png",
    "features": ["Search by city", "7-day forecast", "Responsive UI"],
    "comingFeatures": ["Geolocation auto-detect", "Theme switcher"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>WeatherNow</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"weather-container\">\n    <input type=\"text\" id=\"cityInput\" placeholder=\"Enter city\" />\n    <button onclick=\"getWeather()\">Get Weather</button>\n    <div id=\"weatherResult\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: Arial, sans-serif;\n  background: linear-gradient(to bottom, #87cefa, #ffffff);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.weather-container {\n  background: #fff;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n}\ninput, button {\n  margin: 10px 0;\n  padding: 8px;\n}",
      "JavaScript": "async function getWeather() {\n  const city = document.getElementById(\"cityInput\").value;\n  const apiKey = \"your_api_key\";\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  document.getElementById(\"weatherResult\").innerHTML = `\n    <h3>${data.name}</h3>\n    <p>Temperature: ${data.main.temp}\u00b0C</p>\n    <p>Condition: ${data.weather[0].description}</p>\n  `;\n}"
    }
  },
  {
    "id": 2,
    "name": "TaskMaster",
    "category": "To-Do App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 80,
    "view": 2100,
    "comment": 8,
    "liveLink": "https://example.com/taskmaster",
    "githubRepoLink": "https://github.com/username/taskmaster",
    "description": "A simple to-do list application to manage daily tasks.",
    "whyIMakeThis": "To practice DOM manipulation and local storage.",
    "image": "https://example.com/images/taskmaster.png",
    "features": ["Add tasks", "Mark complete", "Delete tasks"],
    "comingFeatures": ["Task filtering", "Due dates"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>TaskMaster</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"app\">\n    <h1>To-Do List</h1>\n    <input id=\"taskInput\" type=\"text\" placeholder=\"New Task\">\n    <button onclick=\"addTask()\">Add</button>\n    <ul id=\"taskList\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #f0f0f0;\n  padding: 20px;\n}\n.app {\n  max-width: 400px;\n  margin: auto;\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n}\ninput, button {\n  padding: 10px;\n  margin: 5px 0;\n  width: 100%;\n}",
      "JavaScript": "function addTask() {\n  const input = document.getElementById('taskInput');\n  const task = input.value;\n  if (task === '') return;\n  const li = document.createElement('li');\n  li.textContent = task;\n  li.onclick = () => li.remove();\n  document.getElementById('taskList').appendChild(li);\n  input.value = '';\n}"
    }
  },
  {
    "id": 3,
    "name": "QuoteGenius",
    "category": "Quotes App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 70,
    "view": 1950,
    "comment": 5,
    "liveLink": "https://example.com/quotegenius",
    "githubRepoLink": "https://github.com/username/quotegenius",
    "description": "Displays random quotes from famous people.",
    "whyIMakeThis": "To learn async data fetching and UI rendering.",
    "image": "https://example.com/images/quotegenius.png",
    "features": ["Fetch random quote", "Tweet quote"],
    "comingFeatures": ["Save favorite quotes", "Search by author"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>QuoteGenius</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"quote-box\">\n    <p id=\"quote\">Click to get a quote!</p>\n    <button onclick=\"fetchQuote()\">New Quote</button>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #dcdcdc;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n.quote-box {\n  text-align: center;\n  background: white;\n  padding: 30px;\n  border-radius: 10px;\n}\nbutton {\n  margin-top: 10px;\n}",
      "JavaScript": "async function fetchQuote() {\n  const response = await fetch('https://api.quotable.io/random');\n  const data = await response.json();\n  document.getElementById('quote').innerText = data.content;\n}"
    }
  },
  {
    "id": 1,
    "name": "WeatherNow",
    "category": "Weather App",
    "projectType": "intermediate",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 120,
    "view": 3400,
    "comment": 15,
    "liveLink": "https://example.com/weathernow",
    "githubRepoLink": "https://github.com/username/weathernow",
    "description": "A sleek weather forecast app using OpenWeather API.",
    "whyIMakeThis": "To learn API integration and improve UI skills.",
    "image": "https://example.com/images/weathernow.png",
    "features": ["Search by city", "7-day forecast", "Responsive UI"],
    "comingFeatures": ["Geolocation auto-detect", "Theme switcher"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>WeatherNow</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"weather-container\">\n    <input type=\"text\" id=\"cityInput\" placeholder=\"Enter city\" />\n    <button onclick=\"getWeather()\">Get Weather</button>\n    <div id=\"weatherResult\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: Arial, sans-serif;\n  background: linear-gradient(to bottom, #87cefa, #ffffff);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.weather-container {\n  background: #fff;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n}\ninput, button {\n  margin: 10px 0;\n  padding: 8px;\n}",
      "JavaScript": "async function getWeather() {\n  const city = document.getElementById(\"cityInput\").value;\n  const apiKey = \"your_api_key\";\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  document.getElementById(\"weatherResult\").innerHTML = `\n    <h3>${data.name}</h3>\n    <p>Temperature: ${data.main.temp}\u00b0C</p>\n    <p>Condition: ${data.weather[0].description}</p>\n  `;\n}"
    }
  },
  {
    "id": 2,
    "name": "TaskMaster",
    "category": "To-Do App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 80,
    "view": 2100,
    "comment": 8,
    "liveLink": "https://example.com/taskmaster",
    "githubRepoLink": "https://github.com/username/taskmaster",
    "description": "A simple to-do list application to manage daily tasks.",
    "whyIMakeThis": "To practice DOM manipulation and local storage.",
    "image": "https://example.com/images/taskmaster.png",
    "features": ["Add tasks", "Mark complete", "Delete tasks"],
    "comingFeatures": ["Task filtering", "Due dates"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>TaskMaster</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"app\">\n    <h1>To-Do List</h1>\n    <input id=\"taskInput\" type=\"text\" placeholder=\"New Task\">\n    <button onclick=\"addTask()\">Add</button>\n    <ul id=\"taskList\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #f0f0f0;\n  padding: 20px;\n}\n.app {\n  max-width: 400px;\n  margin: auto;\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n}\ninput, button {\n  padding: 10px;\n  margin: 5px 0;\n  width: 100%;\n}",
      "JavaScript": "function addTask() {\n  const input = document.getElementById('taskInput');\n  const task = input.value;\n  if (task === '') return;\n  const li = document.createElement('li');\n  li.textContent = task;\n  li.onclick = () => li.remove();\n  document.getElementById('taskList').appendChild(li);\n  input.value = '';\n}"
    }
  },
  {
    "id": 3,
    "name": "QuoteGenius",
    "category": "Quotes App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 70,
    "view": 1950,
    "comment": 5,
    "liveLink": "https://example.com/quotegenius",
    "githubRepoLink": "https://github.com/username/quotegenius",
    "description": "Displays random quotes from famous people.",
    "whyIMakeThis": "To learn async data fetching and UI rendering.",
    "image": "https://example.com/images/quotegenius.png",
    "features": ["Fetch random quote", "Tweet quote"],
    "comingFeatures": ["Save favorite quotes", "Search by author"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>QuoteGenius</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"quote-box\">\n    <p id=\"quote\">Click to get a quote!</p>\n    <button onclick=\"fetchQuote()\">New Quote</button>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #dcdcdc;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n.quote-box {\n  text-align: center;\n  background: white;\n  padding: 30px;\n  border-radius: 10px;\n}\nbutton {\n  margin-top: 10px;\n}",
      "JavaScript": "async function fetchQuote() {\n  const response = await fetch('https://api.quotable.io/random');\n  const data = await response.json();\n  document.getElementById('quote').innerText = data.content;\n}"
    }
  },
  {
    "id": 1,
    "name": "WeatherNow",
    "category": "Weather App",
    "projectType": "intermediate",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 120,
    "view": 3400,
    "comment": 15,
    "liveLink": "https://example.com/weathernow",
    "githubRepoLink": "https://github.com/username/weathernow",
    "description": "A sleek weather forecast app using OpenWeather API.",
    "whyIMakeThis": "To learn API integration and improve UI skills.",
    "image": "https://example.com/images/weathernow.png",
    "features": ["Search by city", "7-day forecast", "Responsive UI"],
    "comingFeatures": ["Geolocation auto-detect", "Theme switcher"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>WeatherNow</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"weather-container\">\n    <input type=\"text\" id=\"cityInput\" placeholder=\"Enter city\" />\n    <button onclick=\"getWeather()\">Get Weather</button>\n    <div id=\"weatherResult\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: Arial, sans-serif;\n  background: linear-gradient(to bottom, #87cefa, #ffffff);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.weather-container {\n  background: #fff;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n}\ninput, button {\n  margin: 10px 0;\n  padding: 8px;\n}",
      "JavaScript": "async function getWeather() {\n  const city = document.getElementById(\"cityInput\").value;\n  const apiKey = \"your_api_key\";\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  document.getElementById(\"weatherResult\").innerHTML = `\n    <h3>${data.name}</h3>\n    <p>Temperature: ${data.main.temp}\u00b0C</p>\n    <p>Condition: ${data.weather[0].description}</p>\n  `;\n}"
    }
  },
  {
    "id": 2,
    "name": "TaskMaster",
    "category": "To-Do App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 80,
    "view": 2100,
    "comment": 8,
    "liveLink": "https://example.com/taskmaster",
    "githubRepoLink": "https://github.com/username/taskmaster",
    "description": "A simple to-do list application to manage daily tasks.",
    "whyIMakeThis": "To practice DOM manipulation and local storage.",
    "image": "https://example.com/images/taskmaster.png",
    "features": ["Add tasks", "Mark complete", "Delete tasks"],
    "comingFeatures": ["Task filtering", "Due dates"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>TaskMaster</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"app\">\n    <h1>To-Do List</h1>\n    <input id=\"taskInput\" type=\"text\" placeholder=\"New Task\">\n    <button onclick=\"addTask()\">Add</button>\n    <ul id=\"taskList\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #f0f0f0;\n  padding: 20px;\n}\n.app {\n  max-width: 400px;\n  margin: auto;\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n}\ninput, button {\n  padding: 10px;\n  margin: 5px 0;\n  width: 100%;\n}",
      "JavaScript": "function addTask() {\n  const input = document.getElementById('taskInput');\n  const task = input.value;\n  if (task === '') return;\n  const li = document.createElement('li');\n  li.textContent = task;\n  li.onclick = () => li.remove();\n  document.getElementById('taskList').appendChild(li);\n  input.value = '';\n}"
    }
  },
  {
    "id": 3,
    "name": "QuoteGenius",
    "category": "Quotes App",
    "projectType": "basic",
    "langUsed": ["HTML", "CSS", "JavaScript"],
    "like": 70,
    "view": 1950,
    "comment": 5,
    "liveLink": "https://example.com/quotegenius",
    "githubRepoLink": "https://github.com/username/quotegenius",
    "description": "Displays random quotes from famous people.",
    "whyIMakeThis": "To learn async data fetching and UI rendering.",
    "image": "https://example.com/images/quotegenius.png",
    "features": ["Fetch random quote", "Tweet quote"],
    "comingFeatures": ["Save favorite quotes", "Search by author"],
    "code": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>QuoteGenius</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"quote-box\">\n    <p id=\"quote\">Click to get a quote!</p>\n    <button onclick=\"fetchQuote()\">New Quote</button>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "CSS": "body {\n  font-family: sans-serif;\n  background: #dcdcdc;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n.quote-box {\n  text-align: center;\n  background: white;\n  padding: 30px;\n  border-radius: 10px;\n}\nbutton {\n  margin-top: 10px;\n}",
      "JavaScript": "async function fetchQuote() {\n  const response = await fetch('https://api.quotable.io/random');\n  const data = await response.json();\n  document.getElementById('quote').innerText = data.content;\n}"
    }
  }
]
